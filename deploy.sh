#!/bin/bash

# Script de Deploy Automatizado para VPS Ubuntu
# WhatsApp AI Central Application

set -e

echo "üöÄ Iniciando deploy da aplica√ß√£o WhatsApp AI Central..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para log colorido
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Verificar se est√° rodando como root
if [[ $EUID -eq 0 ]]; then
   log_error "Este script n√£o deve ser executado como root"
   exit 1
fi

# Verificar se o Node.js est√° instalado
if ! command -v node &> /dev/null; then
    log_error "Node.js n√£o est√° instalado. Execute primeiro o script de prepara√ß√£o do servidor."
    exit 1
fi

# Verificar se o PM2 est√° instalado
if ! command -v pm2 &> /dev/null; then
    log_error "PM2 n√£o est√° instalado. Execute: sudo npm install -g pm2"
    exit 1
fi

# Verificar se o PostgreSQL est√° rodando
if ! systemctl is-active --quiet postgresql; then
    log_error "PostgreSQL n√£o est√° rodando. Execute: sudo systemctl start postgresql"
    exit 1
fi

log_info "Instalando depend√™ncias do servidor..."
npm install

log_info "Instalando depend√™ncias do cliente..."
cd client
npm install

log_info "Fazendo build do cliente..."
npm run build
cd ..

# Verificar se o arquivo .env existe
if [ ! -f ".env" ]; then
    log_warning "Arquivo .env n√£o encontrado. Copiando .env.example..."
    cp .env.example .env
    log_warning "IMPORTANTE: Edite o arquivo .env com suas configura√ß√µes antes de continuar!"
    log_warning "Execute: nano .env"
    read -p "Pressione Enter ap√≥s configurar o arquivo .env..."
fi

# Criar diret√≥rio de logs se n√£o existir
mkdir -p logs

# Parar aplica√ß√£o se estiver rodando
if pm2 list | grep -q "whatsapp-multi-user"; then
    log_info "Parando aplica√ß√£o existente..."
    pm2 stop whatsapp-multi-user
    pm2 delete whatsapp-multi-user
fi

log_info "Iniciando aplica√ß√£o com PM2..."
pm2 start ecosystem.config.js

log_info "Salvando configura√ß√£o do PM2..."
pm2 save

# Configurar PM2 para iniciar no boot (apenas se n√£o estiver configurado)
if ! pm2 startup | grep -q "already"; then
    log_info "Configurando PM2 para iniciar no boot..."
    pm2 startup
fi

log_success "Deploy conclu√≠do com sucesso!"
log_info "Comandos √∫teis:"
echo "  - Ver status: pm2 status"
echo "  - Ver logs: pm2 logs whatsapp-multi-user"
echo "  - Reiniciar: pm2 restart whatsapp-multi-user"
echo "  - Parar: pm2 stop whatsapp-multi-user"
echo "  - Monitorar: pm2 monit"

log_info "Verificando status da aplica√ß√£o..."
pm2 status

log_success "Aplica√ß√£o rodando! Acesse via navegador na porta 3002"